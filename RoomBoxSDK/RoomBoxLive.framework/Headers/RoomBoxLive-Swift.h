#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef ROOMBOXLIVE_SWIFT_H
#define ROOMBOXLIVE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RoomBoxLive",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC11RoomBoxLive15PermissionAlert")
@interface PermissionAlert : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11RoomBoxLive11DeniedAlert")
@interface DeniedAlert : PermissionAlert
@end


SWIFT_CLASS("_TtC11RoomBoxLive13DisabledAlert")
@interface DisabledAlert : PermissionAlert
@end





SWIFT_CLASS("_TtC11RoomBoxLive10Permission")
@interface Permission : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@interface Permission (SWIFT_EXTENSION(RoomBoxLive))
/// The textual representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// A textual representation of this instance, suitable for debugging.
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end



SWIFT_CLASS("_TtC11RoomBoxLive20RoomBoxClassInfoItem")
@interface RoomBoxClassInfoItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull classId;
@property (nonatomic, copy) NSString * _Nonnull childClassId;
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic, copy) NSString * _Nonnull roleId;
@property (nonatomic, copy) NSString * _Nonnull loginUserStatus;
@property (nonatomic, copy) NSString * _Nonnull userName;
@property (nonatomic, copy) NSString * _Nonnull token;
@property (nonatomic) uint32_t classType;
@property (nonatomic) BOOL isNewRoom;
@property (nonatomic, copy) NSString * _Nullable bizCode;
@property (nonatomic, copy) NSString * _Nullable baseInfo;
@property (nonatomic, copy) NSString * _Nonnull className;
@property (nonatomic, copy) NSString * _Nonnull webUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;
@protocol RoomBoxLiveDelegate;

SWIFT_CLASS("_TtC11RoomBoxLive11RoomBoxLive")
@interface RoomBoxLive : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Demo进入通用版教室#imageLiteral(resourceName: “15101624443272_.pic.jpg”)
/// @param from vc  默认从这个控制器push进教室
/// @param info  进入教室需要传信息包括教室id,学生id，token,机构类型
+ (void)enterClassFrom:(UIViewController * _Nonnull)vc uid:(NSString * _Nonnull)uid cid:(NSString * _Nonnull)cid token:(NSString * _Nonnull)token cType:(uint32_t)cType lowPerformanceNeeded:(BOOL)lowPerformanceNeeded bizCode:(NSString * _Nullable)bizCode completionClosure:(void (^ _Nonnull)(BOOL, NSInteger, UIViewController * _Nullable))completionClosure delegate:(id <RoomBoxLiveDelegate> _Nullable)delegate;
+ (void)quickEnterClassFrom:(UIViewController * _Nonnull)vc userName:(NSString * _Nonnull)userName cid:(NSString * _Nonnull)cid nickName:(NSString * _Nullable)nickName childOrgId:(NSString * _Nullable)childOrgId childCId:(NSString * _Nullable)childCId lowPerformanceNeeded:(BOOL)lowPerformanceNeeded bizCode:(NSString * _Nullable)bizCode completionClosure:(void (^ _Nonnull)(BOOL, NSInteger, UIViewController * _Nullable))completionClosure delegate:(id <RoomBoxLiveDelegate> _Nullable)delegate;
+ (void)enterWritingPadFrom:(UIViewController * _Nonnull)vc info:(RoomBoxClassInfoItem * _Nonnull)info bizCode:(NSString * _Nullable)bizCode completionClosure:(void (^ _Nonnull)(BOOL, NSInteger, UIViewController * _Nullable))completionClosure delegate:(id <RoomBoxLiveDelegate> _Nullable)delegate;
/// 外部销毁直播间
+ (void)loginOutDestory;
+ (UIViewController * _Nonnull)enterEmergencyRoom:(NSString * _Nonnull)urlString preOritation:(UIDeviceOrientation)preOritation SWIFT_WARN_UNUSED_RESULT;
+ (void)enterAamazingBoxFrom:(UIViewController * _Nonnull)vc uid:(NSString * _Nonnull)uid cid:(NSString * _Nonnull)cid cType:(uint32_t)cType token:(NSString * _Nonnull)token nickName:(NSString * _Nonnull)nickName preOritation:(UIDeviceOrientation)preOritation completionClosure:(void (^ _Nonnull)(BOOL, NSInteger, UIViewController * _Nullable))completionClosure;
@end


@class RoomBoxLiveOperationParam;
@protocol RoomBoxLiveOperationDelegate;
@class UIView;

SWIFT_PROTOCOL("_TtP11RoomBoxLive19RoomBoxLiveDelegate_")
@protocol RoomBoxLiveDelegate <NSObject>
@optional
/// 离开房间
- (void)roomLiveLeaveComplete;
/// 将要离开房间
- (void)roomLiveWillLeave;
/// 被强制踢出房间
- (void)roomLiveReceiveForceOutMessage;
/// 登入失败
- (void)roomLiveLoginFailed;
/// 登入房间前屏幕旋转状态，退出后恢复
- (UIDeviceOrientation)roomLivePreOrientation SWIFT_WARN_UNUSED_RESULT;
/// 登入房间前传入屏幕横屏旋转方向只能传其他方向无效(UIDeviceOrientationLandscapeLeft,UIDeviceOrientationLandscapeRight)，进入后使用，不设置使用默认
- (UIDeviceOrientation)roomLiveRoomLandscapeOrientation SWIFT_WARN_UNUSED_RESULT;
/// 运营位事件
/// \param info 透传信息
///
/// \param operationDelegate 通过这个代理响应进入小窗
///
/// \param return  内容view 
///
- (UIView * _Nonnull)roomLiveOperatingActionWithInfo:(RoomBoxLiveOperationParam * _Nonnull)info operationDelegate:(id <RoomBoxLiveOperationDelegate> _Nonnull)operationDelegate SWIFT_WARN_UNUSED_RESULT;
/// 小窗模式时候的屏幕朝向
- (UIDeviceOrientation)roomLiveSmallWindowModeOrientation SWIFT_WARN_UNUSED_RESULT;
/// 从小窗模式恢复直播间
- (void)roomLiveDidResumeRoom;
@end


/// 运营位管理
SWIFT_PROTOCOL("_TtP11RoomBoxLive28RoomBoxLiveOperationDelegate_")
@protocol RoomBoxLiveOperationDelegate <NSObject>
/// 进入小窗模式
- (void)roomLiveEnterSmallWindowMode;
@end


/// 运营位返还参数对象
SWIFT_CLASS("_TtC11RoomBoxLive25RoomBoxLiveOperationParam")
@interface RoomBoxLiveOperationParam : NSObject
/// 用户token
@property (nonatomic, copy) NSString * _Nullable token;
/// 用户id
@property (nonatomic, copy) NSString * _Nullable userId;
/// 运营位url
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11RoomBoxLive19RoomBoxPublicConfig")
@interface RoomBoxPublicConfig : NSObject
@property (nonatomic, copy) NSString * _Nonnull bundleName;
@property (nonatomic, copy) NSString * _Nonnull helpUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11RoomBoxLive21RoomBoxRtcLiveManager")
@interface RoomBoxRtcLiveManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC11RoomBoxLive8SDKProxy")
@interface SDKProxy : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC11RoomBoxLive27XDFRoomBoxColorPanelManager")
@interface XDFRoomBoxColorPanelManager : NSObject
+ (void)config;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11RoomBoxLive12XDFRoomImage")
@interface XDFRoomImage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef ROOMBOXLIVE_SWIFT_H
#define ROOMBOXLIVE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RoomBoxLive",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC11RoomBoxLive15PermissionAlert")
@interface PermissionAlert : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11RoomBoxLive11DeniedAlert")
@interface DeniedAlert : PermissionAlert
@end


SWIFT_CLASS("_TtC11RoomBoxLive13DisabledAlert")
@interface DisabledAlert : PermissionAlert
@end





SWIFT_CLASS("_TtC11RoomBoxLive10Permission")
@interface Permission : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@interface Permission (SWIFT_EXTENSION(RoomBoxLive))
/// The textual representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// A textual representation of this instance, suitable for debugging.
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end



SWIFT_CLASS("_TtC11RoomBoxLive20RoomBoxClassInfoItem")
@interface RoomBoxClassInfoItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull classId;
@property (nonatomic, copy) NSString * _Nonnull childClassId;
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic, copy) NSString * _Nonnull roleId;
@property (nonatomic, copy) NSString * _Nonnull loginUserStatus;
@property (nonatomic, copy) NSString * _Nonnull userName;
@property (nonatomic, copy) NSString * _Nonnull token;
@property (nonatomic) uint32_t classType;
@property (nonatomic) BOOL isNewRoom;
@property (nonatomic, copy) NSString * _Nullable bizCode;
@property (nonatomic, copy) NSString * _Nullable baseInfo;
@property (nonatomic, copy) NSString * _Nonnull className;
@property (nonatomic, copy) NSString * _Nonnull webUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;
@protocol RoomBoxLiveDelegate;

SWIFT_CLASS("_TtC11RoomBoxLive11RoomBoxLive")
@interface RoomBoxLive : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Demo进入通用版教室#imageLiteral(resourceName: “15101624443272_.pic.jpg”)
/// @param from vc  默认从这个控制器push进教室
/// @param info  进入教室需要传信息包括教室id,学生id，token,机构类型
+ (void)enterClassFrom:(UIViewController * _Nonnull)vc uid:(NSString * _Nonnull)uid cid:(NSString * _Nonnull)cid token:(NSString * _Nonnull)token cType:(uint32_t)cType lowPerformanceNeeded:(BOOL)lowPerformanceNeeded bizCode:(NSString * _Nullable)bizCode completionClosure:(void (^ _Nonnull)(BOOL, NSInteger, UIViewController * _Nullable))completionClosure delegate:(id <RoomBoxLiveDelegate> _Nullable)delegate;
+ (void)quickEnterClassFrom:(UIViewController * _Nonnull)vc userName:(NSString * _Nonnull)userName cid:(NSString * _Nonnull)cid nickName:(NSString * _Nullable)nickName childOrgId:(NSString * _Nullable)childOrgId childCId:(NSString * _Nullable)childCId lowPerformanceNeeded:(BOOL)lowPerformanceNeeded bizCode:(NSString * _Nullable)bizCode completionClosure:(void (^ _Nonnull)(BOOL, NSInteger, UIViewController * _Nullable))completionClosure delegate:(id <RoomBoxLiveDelegate> _Nullable)delegate;
+ (void)enterWritingPadFrom:(UIViewController * _Nonnull)vc info:(RoomBoxClassInfoItem * _Nonnull)info bizCode:(NSString * _Nullable)bizCode completionClosure:(void (^ _Nonnull)(BOOL, NSInteger, UIViewController * _Nullable))completionClosure delegate:(id <RoomBoxLiveDelegate> _Nullable)delegate;
/// 外部销毁直播间
+ (void)loginOutDestory;
+ (UIViewController * _Nonnull)enterEmergencyRoom:(NSString * _Nonnull)urlString preOritation:(UIDeviceOrientation)preOritation SWIFT_WARN_UNUSED_RESULT;
+ (void)enterAamazingBoxFrom:(UIViewController * _Nonnull)vc uid:(NSString * _Nonnull)uid cid:(NSString * _Nonnull)cid cType:(uint32_t)cType token:(NSString * _Nonnull)token nickName:(NSString * _Nonnull)nickName preOritation:(UIDeviceOrientation)preOritation completionClosure:(void (^ _Nonnull)(BOOL, NSInteger, UIViewController * _Nullable))completionClosure;
@end


@class RoomBoxLiveOperationParam;
@protocol RoomBoxLiveOperationDelegate;
@class UIView;

SWIFT_PROTOCOL("_TtP11RoomBoxLive19RoomBoxLiveDelegate_")
@protocol RoomBoxLiveDelegate <NSObject>
@optional
/// 离开房间
- (void)roomLiveLeaveComplete;
/// 将要离开房间
- (void)roomLiveWillLeave;
/// 被强制踢出房间
- (void)roomLiveReceiveForceOutMessage;
/// 登入失败
- (void)roomLiveLoginFailed;
/// 登入房间前屏幕旋转状态，退出后恢复
- (UIDeviceOrientation)roomLivePreOrientation SWIFT_WARN_UNUSED_RESULT;
/// 登入房间前传入屏幕横屏旋转方向只能传其他方向无效(UIDeviceOrientationLandscapeLeft,UIDeviceOrientationLandscapeRight)，进入后使用，不设置使用默认
- (UIDeviceOrientation)roomLiveRoomLandscapeOrientation SWIFT_WARN_UNUSED_RESULT;
/// 运营位事件
/// \param info 透传信息
///
/// \param operationDelegate 通过这个代理响应进入小窗
///
/// \param return  内容view 
///
- (UIView * _Nonnull)roomLiveOperatingActionWithInfo:(RoomBoxLiveOperationParam * _Nonnull)info operationDelegate:(id <RoomBoxLiveOperationDelegate> _Nonnull)operationDelegate SWIFT_WARN_UNUSED_RESULT;
/// 小窗模式时候的屏幕朝向
- (UIDeviceOrientation)roomLiveSmallWindowModeOrientation SWIFT_WARN_UNUSED_RESULT;
/// 从小窗模式恢复直播间
- (void)roomLiveDidResumeRoom;
@end


/// 运营位管理
SWIFT_PROTOCOL("_TtP11RoomBoxLive28RoomBoxLiveOperationDelegate_")
@protocol RoomBoxLiveOperationDelegate <NSObject>
/// 进入小窗模式
- (void)roomLiveEnterSmallWindowMode;
@end


/// 运营位返还参数对象
SWIFT_CLASS("_TtC11RoomBoxLive25RoomBoxLiveOperationParam")
@interface RoomBoxLiveOperationParam : NSObject
/// 用户token
@property (nonatomic, copy) NSString * _Nullable token;
/// 用户id
@property (nonatomic, copy) NSString * _Nullable userId;
/// 运营位url
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11RoomBoxLive19RoomBoxPublicConfig")
@interface RoomBoxPublicConfig : NSObject
@property (nonatomic, copy) NSString * _Nonnull bundleName;
@property (nonatomic, copy) NSString * _Nonnull helpUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11RoomBoxLive21RoomBoxRtcLiveManager")
@interface RoomBoxRtcLiveManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC11RoomBoxLive8SDKProxy")
@interface SDKProxy : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC11RoomBoxLive27XDFRoomBoxColorPanelManager")
@interface XDFRoomBoxColorPanelManager : NSObject
+ (void)config;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11RoomBoxLive12XDFRoomImage")
@interface XDFRoomImage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSClsStorage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#import <Protobuf/GPBProtocolBuffers.h>

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class MSClsAddStorageItem;
@class MSClsDelStorageItem;
@class MSClsStorageItem;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MsclsStorageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MsclsStorageRoot : GPBRootObject
@end

#pragma mark - MSClsStorageItem

typedef GPB_ENUM(MSClsStorageItem_FieldNumber) {
  MSClsStorageItem_FieldNumber_Key = 1,
  MSClsStorageItem_FieldNumber_Value = 2,
  MSClsStorageItem_FieldNumber_StrValue = 3,
  MSClsStorageItem_FieldNumber_OwnerCid = 4,
  MSClsStorageItem_FieldNumber_OwnerUid = 5,
};

@interface MSClsStorageItem : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSData *value;

@property(nonatomic, readwrite, copy, null_resettable) NSString *strValue;

@property(nonatomic, readwrite) uint64_t ownerCid;

@property(nonatomic, readwrite) uint64_t ownerUid;

@end

#pragma mark - MSClsConsistStorageNotify

typedef GPB_ENUM(MSClsConsistStorageNotify_FieldNumber) {
  MSClsConsistStorageNotify_FieldNumber_Operate = 1,
  MSClsConsistStorageNotify_FieldNumber_VecItemArray = 2,
};

/**
 * 0x004000C3、0x004100C3
 **/
@interface MSClsConsistStorageNotify : GPBMessage

@property(nonatomic, readwrite) uint32_t operate;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MSClsStorageItem*> *vecItemArray;
/** The number of items in @c vecItemArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecItemArray_Count;

@end

#pragma mark - MSClsAddStorageItem

typedef GPB_ENUM(MSClsAddStorageItem_FieldNumber) {
  MSClsAddStorageItem_FieldNumber_Key = 1,
  MSClsAddStorageItem_FieldNumber_Value = 2,
  MSClsAddStorageItem_FieldNumber_StrValue = 3,
  MSClsAddStorageItem_FieldNumber_Scope = 4,
};

@interface MSClsAddStorageItem : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSData *value;

@property(nonatomic, readwrite, copy, null_resettable) NSString *strValue;

@property(nonatomic, readwrite) uint32_t scope;

@end

#pragma mark - MSClsAddConsistStorageC2S

typedef GPB_ENUM(MSClsAddConsistStorageC2S_FieldNumber) {
  MSClsAddConsistStorageC2S_FieldNumber_VecItemArray = 1,
};

/**
 * 0x004000C4、0x004100C4
 **/
@interface MSClsAddConsistStorageC2S : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MSClsAddStorageItem*> *vecItemArray;
/** The number of items in @c vecItemArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecItemArray_Count;

@end

#pragma mark - MSClsAddConsistStorageS2C

typedef GPB_ENUM(MSClsAddConsistStorageS2C_FieldNumber) {
  MSClsAddConsistStorageS2C_FieldNumber_RspCode = 1,
  MSClsAddConsistStorageS2C_FieldNumber_VecFailedItemArray = 2,
};

/**
 * 0x004000C5、0x004100C5
 **/
@interface MSClsAddConsistStorageS2C : GPBMessage

@property(nonatomic, readwrite) uint32_t rspCode;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MSClsAddStorageItem*> *vecFailedItemArray;
/** The number of items in @c vecFailedItemArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecFailedItemArray_Count;

@end

#pragma mark - MSClsDelStorageItem

typedef GPB_ENUM(MSClsDelStorageItem_FieldNumber) {
  MSClsDelStorageItem_FieldNumber_Key = 1,
  MSClsDelStorageItem_FieldNumber_Scope = 2,
};

@interface MSClsDelStorageItem : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite) uint32_t scope;

@end

#pragma mark - MSClsDelConsistStorageC2S

typedef GPB_ENUM(MSClsDelConsistStorageC2S_FieldNumber) {
  MSClsDelConsistStorageC2S_FieldNumber_VecItemArray = 1,
};

/**
 * 0x004000C6、0x004100C6
 **/
@interface MSClsDelConsistStorageC2S : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MSClsDelStorageItem*> *vecItemArray;
/** The number of items in @c vecItemArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecItemArray_Count;

@end

#pragma mark - MSClsDelConsistStorageS2C

typedef GPB_ENUM(MSClsDelConsistStorageS2C_FieldNumber) {
  MSClsDelConsistStorageS2C_FieldNumber_RspCode = 1,
  MSClsDelConsistStorageS2C_FieldNumber_VecFailedItemArray = 2,
};

/**
 * 0x004000C7、0x004100C7
 **/
@interface MSClsDelConsistStorageS2C : GPBMessage

@property(nonatomic, readwrite) uint32_t rspCode;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MSClsDelStorageItem*> *vecFailedItemArray;
/** The number of items in @c vecFailedItemArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecFailedItemArray_Count;

@end

#pragma mark - MSClsGetConsistStorage

typedef GPB_ENUM(MSClsGetConsistStorage_FieldNumber) {
  MSClsGetConsistStorage_FieldNumber_VecKeyArray = 1,
};

/**
 * 0x004000C8、0x004100C8
 **/
@interface MSClsGetConsistStorage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *vecKeyArray;
/** The number of items in @c vecKeyArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecKeyArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSClsMic.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#import <Protobuf/GPBProtocolBuffers.h>

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class MSClsUserInfo;
@class UserAVState;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum MicMode

typedef GPB_ENUM(MicMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MicMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MicMode_MicModeAssign = 0,
  MicMode_MicModeRondom = 1,
};

GPBEnumDescriptor *MicMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MicMode_IsValidValue(int32_t value);

#pragma mark - Enum MicType

typedef GPB_ENUM(MicType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MicType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MicType_MicTypeVideo = 0,
  MicType_MicTypeAudio = 1,
};

GPBEnumDescriptor *MicType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MicType_IsValidValue(int32_t value);

#pragma mark - Enum MicEnable

typedef GPB_ENUM(MicEnable) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MicEnable_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MicEnable_MicDisable = 0,
  MicEnable_MicEnable = 1,
};

GPBEnumDescriptor *MicEnable_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MicEnable_IsValidValue(int32_t value);

#pragma mark - Enum MicOpType

typedef GPB_ENUM(MicOpType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MicOpType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MicOpType_MicOpTypeSync = 0,
  MicOpType_MicOpTypeAddTail = 1,
  MicOpType_MicOpTypeAddHead = 2,
  MicOpType_MicOpTypeDel = 3,
  MicOpType_MicOpTypeClear = 4,
  MicOpType_MicOpTypeModify = 5,
};

GPBEnumDescriptor *MicOpType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MicOpType_IsValidValue(int32_t value);

#pragma mark - MsclsMicRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MsclsMicRoot : GPBRootObject
@end

#pragma mark - StartMicLineUpC2S

typedef GPB_ENUM(StartMicLineUpC2S_FieldNumber) {
  StartMicLineUpC2S_FieldNumber_Mode = 1,
  StartMicLineUpC2S_FieldNumber_Type = 2,
  StartMicLineUpC2S_FieldNumber_ChannelId = 3,
  StartMicLineUpC2S_FieldNumber_RandomCount = 4,
};

@interface StartMicLineUpC2S : GPBMessage

/** 0: assign, 1: rondom */
@property(nonatomic, readwrite) uint32_t mode;

/** 0: video,  1: audio */
@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) uint64_t channelId;

@property(nonatomic, readwrite) uint32_t randomCount;

@end

#pragma mark - StartMicLineUpS2C

typedef GPB_ENUM(StartMicLineUpS2C_FieldNumber) {
  StartMicLineUpS2C_FieldNumber_RspCode = 1,
  StartMicLineUpS2C_FieldNumber_Mode = 2,
  StartMicLineUpS2C_FieldNumber_Type = 3,
  StartMicLineUpS2C_FieldNumber_ChannelId = 4,
  StartMicLineUpS2C_FieldNumber_RandomCount = 5,
};

@interface StartMicLineUpS2C : GPBMessage

@property(nonatomic, readwrite) uint32_t rspCode;

/** 0: assign, 1: rondom */
@property(nonatomic, readwrite) uint32_t mode;

/** 0: video,  1: audio */
@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) uint64_t channelId;

@property(nonatomic, readwrite) uint32_t randomCount;

@end

#pragma mark - StopMicLineUpC2S

typedef GPB_ENUM(StopMicLineUpC2S_FieldNumber) {
  StopMicLineUpC2S_FieldNumber_ChannelId = 1,
};

@interface StopMicLineUpC2S : GPBMessage

@property(nonatomic, readwrite) uint64_t channelId;

@end

#pragma mark - StopMicLineUpS2C

typedef GPB_ENUM(StopMicLineUpS2C_FieldNumber) {
  StopMicLineUpS2C_FieldNumber_RspCode = 1,
  StopMicLineUpS2C_FieldNumber_ChannelId = 2,
};

@interface StopMicLineUpS2C : GPBMessage

@property(nonatomic, readwrite) uint32_t rspCode;

@property(nonatomic, readwrite) uint64_t channelId;

@end

#pragma mark - EnableMicLineUpNotify

typedef GPB_ENUM(EnableMicLineUpNotify_FieldNumber) {
  EnableMicLineUpNotify_FieldNumber_Enable = 1,
  EnableMicLineUpNotify_FieldNumber_Mode = 2,
  EnableMicLineUpNotify_FieldNumber_Type = 3,
  EnableMicLineUpNotify_FieldNumber_ChannelId = 4,
  EnableMicLineUpNotify_FieldNumber_UserInfo = 5,
  EnableMicLineUpNotify_FieldNumber_RandomCount = 6,
  EnableMicLineUpNotify_FieldNumber_CurCount = 7,
  EnableMicLineUpNotify_FieldNumber_StartStamp = 8,
  EnableMicLineUpNotify_FieldNumber_CurStamp = 9,
};

@interface EnableMicLineUpNotify : GPBMessage

/** 0: Enable, 1: Disable */
@property(nonatomic, readwrite) uint32_t enable;

/** 0: assign, 1: random */
@property(nonatomic, readwrite) uint32_t mode;

/** 0: video,  1: audio */
@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite) uint64_t channelId;

@property(nonatomic, readwrite, strong, null_resettable) MSClsUserInfo *userInfo;
/** Test to see if @c userInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfo;

@property(nonatomic, readwrite) uint32_t randomCount;

@property(nonatomic, readwrite) uint32_t curCount;

@property(nonatomic, readwrite) int64_t startStamp;

@property(nonatomic, readwrite) int64_t curStamp;

@end

#pragma mark - MicHandUpC2S

typedef GPB_ENUM(MicHandUpC2S_FieldNumber) {
  MicHandUpC2S_FieldNumber_ChannelId = 1,
};

@interface MicHandUpC2S : GPBMessage

@property(nonatomic, readwrite) uint64_t channelId;

@end

#pragma mark - MicHandUpS2C

typedef GPB_ENUM(MicHandUpS2C_FieldNumber) {
  MicHandUpS2C_FieldNumber_RspCode = 1,
  MicHandUpS2C_FieldNumber_LineSeq = 2,
  MicHandUpS2C_FieldNumber_ChannelId = 3,
};

@interface MicHandUpS2C : GPBMessage

@property(nonatomic, readwrite) uint32_t rspCode;

@property(nonatomic, readwrite) uint32_t lineSeq;

@property(nonatomic, readwrite) uint64_t channelId;

@end

#pragma mark - MicHandUpNotify

typedef GPB_ENUM(MicHandUpNotify_FieldNumber) {
  MicHandUpNotify_FieldNumber_ChannelId = 1,
  MicHandUpNotify_FieldNumber_UserInfoArray = 2,
  MicHandUpNotify_FieldNumber_LineSeq = 3,
};

@interface MicHandUpNotify : GPBMessage

@property(nonatomic, readwrite) uint64_t channelId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MSClsUserInfo*> *userInfoArray;
/** The number of items in @c userInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userInfoArray_Count;

@property(nonatomic, readwrite) uint32_t lineSeq;

@end

#pragma mark - MicHandDownC2S

typedef GPB_ENUM(MicHandDownC2S_FieldNumber) {
  MicHandDownC2S_FieldNumber_ChannelId = 1,
};

@interface MicHandDownC2S : GPBMessage

@property(nonatomic, readwrite) uint64_t channelId;

@end

#pragma mark - MicHandDownS2C

typedef GPB_ENUM(MicHandDownS2C_FieldNumber) {
  MicHandDownS2C_FieldNumber_RspCode = 1,
  MicHandDownS2C_FieldNumber_ChannelId = 2,
};

@interface MicHandDownS2C : GPBMessage

@property(nonatomic, readwrite) uint32_t rspCode;

@property(nonatomic, readwrite) uint64_t channelId;

@end

#pragma mark - MicHandDownNotify

typedef GPB_ENUM(MicHandDownNotify_FieldNumber) {
  MicHandDownNotify_FieldNumber_ChannelId = 1,
  MicHandDownNotify_FieldNumber_VecUidArray = 2,
  MicHandDownNotify_FieldNumber_LineSeq = 3,
};

@interface MicHandDownNotify : GPBMessage

@property(nonatomic, readwrite) uint64_t channelId;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt64Array *vecUidArray;
/** The number of items in @c vecUidArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecUidArray_Count;

@property(nonatomic, readwrite) uint32_t lineSeq;

@end

#pragma mark - UserAVState

typedef GPB_ENUM(UserAVState_FieldNumber) {
  UserAVState_FieldNumber_Uid = 1,
  UserAVState_FieldNumber_State = 2,
};

@interface UserAVState : GPBMessage

@property(nonatomic, readwrite) uint64_t uid;

/** 按位设置的状态开关 第0位：禁止音频（如果设置了此位，此用户uid需要mute本地音频） 第1位：禁止视频（如果设置了此位，此用户uid需要mute本地视频） */
@property(nonatomic, readwrite) uint32_t state;

@end

#pragma mark - ChangeMicQueueC2S

typedef GPB_ENUM(ChangeMicQueueC2S_FieldNumber) {
  ChangeMicQueueC2S_FieldNumber_OpType = 1,
  ChangeMicQueueC2S_FieldNumber_VecAvStateArray = 2,
  ChangeMicQueueC2S_FieldNumber_ChannelId = 3,
};

@interface ChangeMicQueueC2S : GPBMessage

@property(nonatomic, readwrite) uint32_t opType;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserAVState*> *vecAvStateArray;
/** The number of items in @c vecAvStateArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecAvStateArray_Count;

@property(nonatomic, readwrite) uint64_t channelId;

@end

#pragma mark - ChangeMicQueueS2C

typedef GPB_ENUM(ChangeMicQueueS2C_FieldNumber) {
  ChangeMicQueueS2C_FieldNumber_RspCode = 1,
  ChangeMicQueueS2C_FieldNumber_OpType = 2,
  ChangeMicQueueS2C_FieldNumber_VecAvStateArray = 3,
};

@interface ChangeMicQueueS2C : GPBMessage

@property(nonatomic, readwrite) uint32_t rspCode;

@property(nonatomic, readwrite) uint32_t opType;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserAVState*> *vecAvStateArray;
/** The number of items in @c vecAvStateArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecAvStateArray_Count;

@end

#pragma mark - MicQueueNotify

typedef GPB_ENUM(MicQueueNotify_FieldNumber) {
  MicQueueNotify_FieldNumber_VecAvStateArray = 1,
  MicQueueNotify_FieldNumber_VecUserArray = 2,
  MicQueueNotify_FieldNumber_Version = 3,
  MicQueueNotify_FieldNumber_ChannelId = 4,
  MicQueueNotify_FieldNumber_UserInfo = 5,
};

@interface MicQueueNotify : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserAVState*> *vecAvStateArray;
/** The number of items in @c vecAvStateArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecAvStateArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MSClsUserInfo*> *vecUserArray;
/** The number of items in @c vecUserArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vecUserArray_Count;

@property(nonatomic, readwrite) uint32_t version;

@property(nonatomic, readwrite) uint64_t channelId;

@property(nonatomic, readwrite, strong, null_resettable) MSClsUserInfo *userInfo;
/** Test to see if @c userInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfo;

@end

#pragma mark - SynMicQueue

typedef GPB_ENUM(SynMicQueue_FieldNumber) {
  SynMicQueue_FieldNumber_Version = 1,
};

@interface SynMicQueue : GPBMessage

@property(nonatomic, readwrite) uint32_t version;

@end

#pragma mark - RandomMicLineUpC2S

typedef GPB_ENUM(RandomMicLineUpC2S_FieldNumber) {
  RandomMicLineUpC2S_FieldNumber_ChannelId = 1,
};

@interface RandomMicLineUpC2S : GPBMessage

@property(nonatomic, readwrite) uint64_t channelId;

@end

#pragma mark - RandomMicLineUpS2C

typedef GPB_ENUM(RandomMicLineUpS2C_FieldNumber) {
  RandomMicLineUpS2C_FieldNumber_RspCode = 1,
  RandomMicLineUpS2C_FieldNumber_ChannelId = 2,
};

@interface RandomMicLineUpS2C : GPBMessage

@property(nonatomic, readwrite) uint32_t rspCode;

@property(nonatomic, readwrite) uint64_t channelId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

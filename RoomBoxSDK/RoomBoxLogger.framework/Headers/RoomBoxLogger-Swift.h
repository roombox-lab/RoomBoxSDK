#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef ROOMBOXLOGGER_SWIFT_H
#define ROOMBOXLOGGER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RoomBoxLogger",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC13RoomBoxLogger13RBLogPathUtil")
@interface RBLogPathUtil : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger18RBLogSchemeHandler")
@interface RBLogSchemeHandler : NSObject
+ (BOOL)handleUrl:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger9RBLogUtil")
@interface RBLogUtil : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RBLogUtil * _Nonnull shared;)
+ (RBLogUtil * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)uploadLogWithUserId:(NSString * _Nullable)userId showHud:(BOOL)showHud completionBlock:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionBlock;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger22RBRoomSendPointManager")
@interface RBRoomSendPointManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RBRoomSendPointManager * _Nonnull shared;)
+ (RBRoomSendPointManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)configCurrentInfo;
- (void)configBaseUrlWithReportUrlString:(NSString * _Nonnull)reportUrlString urlString:(NSString * _Nonnull)urlString actionUrlString:(NSString * _Nonnull)actionUrlString logHost:(NSString * _Nonnull)logHost;
- (void)setCurrentUserIdWithUserId:(NSString * _Nullable)userId;
- (void)setCurrentSidWithSid:(NSString * _Nullable)sid;
- (void)setCurrentClassIdWithClassId:(NSString * _Nullable)classId;
- (void)setCurrentTeacherRoomIdWithClassId:(NSString * _Nullable)classId;
- (void)setCurrentAssistantRoomIdWithClassId:(NSString * _Nullable)classId;
- (void)setCurrentRoleIdWithRoleId:(NSString * _Nullable)roleId;
- (void)setCurrentUserNameWithUserName:(NSString * _Nullable)userName;
- (void)setCurrentWhiteboardVersionWithVersion:(NSString * _Nullable)version;
- (void)setCurrentClassRoomTypeWithRoomType:(NSInteger)roomType;
- (void)setSDKversionValueWithValue:(NSString * _Nonnull)value;
- (void)sendDownLoadMatialWithName:(NSString * _Nonnull)nameFro address:(NSString * _Nonnull)addressFro size:(float)sizeFro spendTime:(NSTimeInterval)timefro isSuccess:(BOOL)isSuccess errorCode:(NSString * _Nonnull)errorCode;
- (void)sendEnterClassRoom;
- (void)sendOutClassRoom;
- (void)sendCrashMessageWithMessage:(NSString * _Nonnull)messageFro;
- (void)sendMicMessageWithMessage:(NSString * _Nonnull)message;
- (void)sendListenerMessageWithUid:(uint64_t)uid isReciveMic:(BOOL)isReciveMic;
- (void)sendHandUpMessage;
- (void)updateNetWorkMessageWithRtcTQuality:(NSInteger)rtcTQuality rtcRQuality:(NSInteger)rtcRQuality;
- (void)updateAgoraNetWorkMessageWithRtcTQuality:(NSInteger)rtcTQuality rtcRQuality:(NSInteger)rtcRQuality;
- (void)updateNetWorkTimeDelayWithDelay:(int32_t)delay;
- (void)updateAgoraNetWorkTimeDelayWithDelay:(int32_t)delay;
- (void)sendOneKeyFixPointWithMatrialId:(NSString * _Nonnull)matrialId;
- (void)sendPlayBackPointWithPlayTime:(int32_t)playTime playUrlString:(NSString * _Nullable)playUrlString;
- (void)sendMicOpHandUpWithHandUp:(NSInteger)handUp;
- (void)sendChatOpWatchTeacherWithWatchTeacher:(NSInteger)watchTeacher;
- (void)sendRequestHelpOpWithHelpOp:(NSInteger)helpOp;
- (void)sendQuizOpAnswerWithQuizId:(NSInteger)quizId count:(NSInteger)count list:(NSArray<NSDictionary<NSString *, id> *> * _Nonnull)list timeSpend:(double)timeSpend matId:(NSInteger)matId curPage:(NSInteger)curPage;
- (void)sendReportIntellisensePointWithBodyType:(int32_t)type content:(NSString * _Nonnull)fro;
/// actionClick
- (void)sendLoginAccountClickPointWithCode:(NSString * _Nonnull)code msg:(NSString * _Nonnull)msg account:(NSString * _Nonnull)account loginType:(NSString * _Nonnull)loginType url:(NSString * _Nonnull)url;
- (void)sendClassScheduleClickPointWithCode:(NSString * _Nonnull)code msg:(NSString * _Nonnull)msg count:(NSString * _Nonnull)count url:(NSString * _Nonnull)url;
- (void)sendDownLoadMatialPointWithMatId:(NSString * _Nonnull)matId urlString:(NSString * _Nonnull)urlString serverFileSize:(int64_t)serverFileSize downFileSize:(int64_t)downFileSize serverFileMd5:(NSString * _Nonnull)serverFileMd5 downFileMd5:(NSString * _Nonnull)downFileMd5 startTime:(uint64_t)startTime spendTime:(uint64_t)spendTime rspCode:(NSInteger)rspCode httpCode:(NSInteger)httpCode;
- (void)sendChatOpWatchTeacherActionPointWithWatchTeacher:(NSInteger)watchTeacher;
- (void)sendRequestHelpOpActionPointWithHelpOp:(NSInteger)helpOp;
- (void)sendQuizOpAnswerActionPointWithQuizId:(NSInteger)quizId count:(NSInteger)count list:(NSArray<NSDictionary<NSString *, id> *> * _Nonnull)list timeSpend:(double)timeSpend;
- (void)sendNetworkActionPoint;
- (void)sendWebActinClickPointDataWithBody:(NSString * _Nonnull)body;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger33RBRoomSendPointManagerSwiftBridge")
@interface RBRoomSendPointManagerSwiftBridge : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RBRoomSendPointManagerSwiftBridge * _Nonnull shared;)
+ (RBRoomSendPointManagerSwiftBridge * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)sendPlayBackPointWithPlayTime:(int32_t)playTime playUrlString:(NSString * _Nullable)playUrlString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger10RoomBoxLog")
@interface RoomBoxLog : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RoomBoxLog * _Nonnull instance;)
+ (RoomBoxLog * _Nonnull)instance SWIFT_WARN_UNUSED_RESULT;
+ (void)setInstance:(RoomBoxLog * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum RoomBoxLogLevel : NSInteger;

@interface RoomBoxLog (SWIFT_EXTENSION(RoomBoxLogger))
- (void)setDebugWithIsDebug:(BOOL)isDebug;
- (void)logWithMessage:(NSString * _Nonnull)message level:(enum RoomBoxLogLevel)level;
- (void)flush;
@end

typedef SWIFT_ENUM(NSInteger, RoomBoxLogLevel, open) {
  RoomBoxLogLevelError = 0,
  RoomBoxLogLevelInfo = 1,
  RoomBoxLogLevelDebug = 2,
};


SWIFT_CLASS("_TtC13RoomBoxLogger15RoomBoxLogModel")
@interface RoomBoxLogModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic, copy) NSString * _Nonnull role;
@property (nonatomic, copy) NSString * _Nonnull sid;
@property (nonatomic) uint32_t classType;
@property (nonatomic, copy) NSString * _Nullable bizCode;
@property (nonatomic, copy) NSString * _Nullable baseInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LogProducerClient;

SWIFT_CLASS("_TtC13RoomBoxLogger18RoomBoxLogProducer")
@interface RoomBoxLogProducer : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RoomBoxLogProducer * _Nonnull sharedInstance;)
+ (RoomBoxLogProducer * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)initRoomBoxLogModelWithLogModel:(RoomBoxLogModel * _Nullable)logModel SWIFT_METHOD_FAMILY(none);
+ (NSDictionary<NSString *, NSString *> * _Nonnull)addBasicInfo SWIFT_WARN_UNUSED_RESULT;
- (void)addBasicMetricLogWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value lablesDic:(NSDictionary<NSString *, NSString *> * _Nullable)lablesDic client:(LogProducerClient * _Nonnull)client flush:(int32_t)flush;
- (void)addClassMetricLogWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value lablesDic:(NSDictionary<NSString *, NSString *> * _Nullable)lablesDic flush:(int32_t)flush;
- (void)addQualityMetricLogWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value lablesDic:(NSDictionary<NSString *, NSString *> * _Nullable)lablesDic flush:(int32_t)flush;
- (void)addMetricLogWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value lablesDic:(NSDictionary<NSString *, NSString *> * _Nullable)lablesDic flush:(int32_t)flush;
- (void)addActionLogWithEventId:(NSString * _Nonnull)eventId cid:(NSString * _Nonnull)cid logDic:(NSDictionary<NSString *, NSString *> * _Nullable)logDic flush:(int32_t)flush client:(LogProducerClient * _Nullable)client;
- (void)addDetailLogWithEventId:(NSString * _Nonnull)eventId cid:(NSString * _Nonnull)cid logDic:(NSDictionary<NSString *, NSString *> * _Nullable)logDic flush:(int32_t)flush;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef ROOMBOXLOGGER_SWIFT_H
#define ROOMBOXLOGGER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RoomBoxLogger",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC13RoomBoxLogger13RBLogPathUtil")
@interface RBLogPathUtil : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger18RBLogSchemeHandler")
@interface RBLogSchemeHandler : NSObject
+ (BOOL)handleUrl:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger9RBLogUtil")
@interface RBLogUtil : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RBLogUtil * _Nonnull shared;)
+ (RBLogUtil * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)uploadLogWithUserId:(NSString * _Nullable)userId showHud:(BOOL)showHud completionBlock:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionBlock;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger22RBRoomSendPointManager")
@interface RBRoomSendPointManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RBRoomSendPointManager * _Nonnull shared;)
+ (RBRoomSendPointManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)configCurrentInfo;
- (void)configBaseUrlWithReportUrlString:(NSString * _Nonnull)reportUrlString urlString:(NSString * _Nonnull)urlString actionUrlString:(NSString * _Nonnull)actionUrlString logHost:(NSString * _Nonnull)logHost;
- (void)setCurrentUserIdWithUserId:(NSString * _Nullable)userId;
- (void)setCurrentSidWithSid:(NSString * _Nullable)sid;
- (void)setCurrentClassIdWithClassId:(NSString * _Nullable)classId;
- (void)setCurrentTeacherRoomIdWithClassId:(NSString * _Nullable)classId;
- (void)setCurrentAssistantRoomIdWithClassId:(NSString * _Nullable)classId;
- (void)setCurrentRoleIdWithRoleId:(NSString * _Nullable)roleId;
- (void)setCurrentUserNameWithUserName:(NSString * _Nullable)userName;
- (void)setCurrentWhiteboardVersionWithVersion:(NSString * _Nullable)version;
- (void)setCurrentClassRoomTypeWithRoomType:(NSInteger)roomType;
- (void)setSDKversionValueWithValue:(NSString * _Nonnull)value;
- (void)sendDownLoadMatialWithName:(NSString * _Nonnull)nameFro address:(NSString * _Nonnull)addressFro size:(float)sizeFro spendTime:(NSTimeInterval)timefro isSuccess:(BOOL)isSuccess errorCode:(NSString * _Nonnull)errorCode;
- (void)sendEnterClassRoom;
- (void)sendOutClassRoom;
- (void)sendCrashMessageWithMessage:(NSString * _Nonnull)messageFro;
- (void)sendMicMessageWithMessage:(NSString * _Nonnull)message;
- (void)sendListenerMessageWithUid:(uint64_t)uid isReciveMic:(BOOL)isReciveMic;
- (void)sendHandUpMessage;
- (void)updateNetWorkMessageWithRtcTQuality:(NSInteger)rtcTQuality rtcRQuality:(NSInteger)rtcRQuality;
- (void)updateAgoraNetWorkMessageWithRtcTQuality:(NSInteger)rtcTQuality rtcRQuality:(NSInteger)rtcRQuality;
- (void)updateNetWorkTimeDelayWithDelay:(int32_t)delay;
- (void)updateAgoraNetWorkTimeDelayWithDelay:(int32_t)delay;
- (void)sendOneKeyFixPointWithMatrialId:(NSString * _Nonnull)matrialId;
- (void)sendPlayBackPointWithPlayTime:(int32_t)playTime playUrlString:(NSString * _Nullable)playUrlString;
- (void)sendMicOpHandUpWithHandUp:(NSInteger)handUp;
- (void)sendChatOpWatchTeacherWithWatchTeacher:(NSInteger)watchTeacher;
- (void)sendRequestHelpOpWithHelpOp:(NSInteger)helpOp;
- (void)sendQuizOpAnswerWithQuizId:(NSInteger)quizId count:(NSInteger)count list:(NSArray<NSDictionary<NSString *, id> *> * _Nonnull)list timeSpend:(double)timeSpend matId:(NSInteger)matId curPage:(NSInteger)curPage;
- (void)sendReportIntellisensePointWithBodyType:(int32_t)type content:(NSString * _Nonnull)fro;
/// actionClick
- (void)sendLoginAccountClickPointWithCode:(NSString * _Nonnull)code msg:(NSString * _Nonnull)msg account:(NSString * _Nonnull)account loginType:(NSString * _Nonnull)loginType url:(NSString * _Nonnull)url;
- (void)sendClassScheduleClickPointWithCode:(NSString * _Nonnull)code msg:(NSString * _Nonnull)msg count:(NSString * _Nonnull)count url:(NSString * _Nonnull)url;
- (void)sendDownLoadMatialPointWithMatId:(NSString * _Nonnull)matId urlString:(NSString * _Nonnull)urlString serverFileSize:(int64_t)serverFileSize downFileSize:(int64_t)downFileSize serverFileMd5:(NSString * _Nonnull)serverFileMd5 downFileMd5:(NSString * _Nonnull)downFileMd5 startTime:(uint64_t)startTime spendTime:(uint64_t)spendTime rspCode:(NSInteger)rspCode httpCode:(NSInteger)httpCode;
- (void)sendChatOpWatchTeacherActionPointWithWatchTeacher:(NSInteger)watchTeacher;
- (void)sendRequestHelpOpActionPointWithHelpOp:(NSInteger)helpOp;
- (void)sendQuizOpAnswerActionPointWithQuizId:(NSInteger)quizId count:(NSInteger)count list:(NSArray<NSDictionary<NSString *, id> *> * _Nonnull)list timeSpend:(double)timeSpend;
- (void)sendNetworkActionPoint;
- (void)sendWebActinClickPointDataWithBody:(NSString * _Nonnull)body;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger33RBRoomSendPointManagerSwiftBridge")
@interface RBRoomSendPointManagerSwiftBridge : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RBRoomSendPointManagerSwiftBridge * _Nonnull shared;)
+ (RBRoomSendPointManagerSwiftBridge * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)sendPlayBackPointWithPlayTime:(int32_t)playTime playUrlString:(NSString * _Nullable)playUrlString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13RoomBoxLogger10RoomBoxLog")
@interface RoomBoxLog : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RoomBoxLog * _Nonnull instance;)
+ (RoomBoxLog * _Nonnull)instance SWIFT_WARN_UNUSED_RESULT;
+ (void)setInstance:(RoomBoxLog * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum RoomBoxLogLevel : NSInteger;

@interface RoomBoxLog (SWIFT_EXTENSION(RoomBoxLogger))
- (void)setDebugWithIsDebug:(BOOL)isDebug;
- (void)logWithMessage:(NSString * _Nonnull)message level:(enum RoomBoxLogLevel)level;
- (void)flush;
@end

typedef SWIFT_ENUM(NSInteger, RoomBoxLogLevel, open) {
  RoomBoxLogLevelError = 0,
  RoomBoxLogLevelInfo = 1,
  RoomBoxLogLevelDebug = 2,
};


SWIFT_CLASS("_TtC13RoomBoxLogger15RoomBoxLogModel")
@interface RoomBoxLogModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic, copy) NSString * _Nonnull role;
@property (nonatomic, copy) NSString * _Nonnull sid;
@property (nonatomic) uint32_t classType;
@property (nonatomic, copy) NSString * _Nullable bizCode;
@property (nonatomic, copy) NSString * _Nullable baseInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LogProducerClient;

SWIFT_CLASS("_TtC13RoomBoxLogger18RoomBoxLogProducer")
@interface RoomBoxLogProducer : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RoomBoxLogProducer * _Nonnull sharedInstance;)
+ (RoomBoxLogProducer * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)initRoomBoxLogModelWithLogModel:(RoomBoxLogModel * _Nullable)logModel SWIFT_METHOD_FAMILY(none);
+ (NSDictionary<NSString *, NSString *> * _Nonnull)addBasicInfo SWIFT_WARN_UNUSED_RESULT;
- (void)addBasicMetricLogWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value lablesDic:(NSDictionary<NSString *, NSString *> * _Nullable)lablesDic client:(LogProducerClient * _Nonnull)client flush:(int32_t)flush;
- (void)addClassMetricLogWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value lablesDic:(NSDictionary<NSString *, NSString *> * _Nullable)lablesDic flush:(int32_t)flush;
- (void)addQualityMetricLogWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value lablesDic:(NSDictionary<NSString *, NSString *> * _Nullable)lablesDic flush:(int32_t)flush;
- (void)addMetricLogWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value lablesDic:(NSDictionary<NSString *, NSString *> * _Nullable)lablesDic flush:(int32_t)flush;
- (void)addActionLogWithEventId:(NSString * _Nonnull)eventId cid:(NSString * _Nonnull)cid logDic:(NSDictionary<NSString *, NSString *> * _Nullable)logDic flush:(int32_t)flush client:(LogProducerClient * _Nullable)client;
- (void)addDetailLogWithEventId:(NSString * _Nonnull)eventId cid:(NSString * _Nonnull)cid logDic:(NSDictionary<NSString *, NSString *> * _Nullable)logDic flush:(int32_t)flush;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
